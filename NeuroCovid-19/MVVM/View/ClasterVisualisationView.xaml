<UserControl x:Class="NeuroCovid19.MVVM.View.ClasterVisualisation"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:dvc="clr-namespace:System.Windows.Controls.DataVisualization.Charting;assembly=DotNetProjects.DataVisualization.Toolkit"
             xmlns:local="clr-namespace:NeuroCovid19.MVVM.View"
             xmlns:viewModel="clr-namespace:NeuroCovid19.MVVM.ViewModel"
             xmlns:lvc="clr-namespace:LiveCharts.Wpf;assembly=LiveCharts.Wpf"
             mc:Ignorable="d"
             d:DesignHeight="450" d:DesignWidth="800"
             SizeChanged="UserControl_SizeChanged">
    <UserControl.DataContext>
        <viewModel:ClasterVisualisationViewModel/>
    </UserControl.DataContext>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="2*"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="30px"/>
            <RowDefinition/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <ComboBox ItemsSource="{Binding ClasterisationComboBox}"
                  Grid.Row="0"
                  SelectedIndex="{Binding SelectedClasterisation}"
                  SelectionChanged="ComboBox_SelectionChanged"/>
        <Grid Grid.Row="1" 
              Grid.Column="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="40"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <TextBlock Text="Количество"
                       Grid.Column="0"
                       Grid.Row="0"
                       Grid.ColumnSpan="2"
                       FontSize="16" 
                       FontWeight="Bold" 
                       HorizontalAlignment="Center" 
                       Margin="0,10,0,0" />
            <lvc:CartesianChart Grid.Row="1" 
                                Grid.Column="0"
                                TooltipTimeout="00:00:04.000">
                <lvc:CartesianChart.Series>
                    <lvc:ColumnSeries Values="{Binding ChartPoints, IsAsync=True}"
                                      DataLabels="True">    
                    </lvc:ColumnSeries>
                </lvc:CartesianChart.Series>
                <lvc:CartesianChart.AxisX>
                    <lvc:Axis Labels="{Binding Columns, IsAsync=True}"/>
                </lvc:CartesianChart.AxisX>
                <lvc:CartesianChart.DataTooltip>
                    <local:CustomTooltip Focusable="True"/>
                </lvc:CartesianChart.DataTooltip>
            </lvc:CartesianChart>
        </Grid>


        <Grid Grid.Column="0"
              Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="2*"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="40"/>
                <RowDefinition Height="2*"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <TextBlock Text="{Binding PropertyName}"
                       Grid.Column="0"
                       Grid.Row="0"
                       Grid.ColumnSpan="2"
                       FontSize="16" 
                       FontWeight="Bold" 
                       HorizontalAlignment="Center" 
                       Margin="0,10,0,0" />
            <lvc:CartesianChart Grid.Row="1"
                                Grid.Column="0"
                                Grid.ColumnSpan="2">
                <lvc:CartesianChart.Series>
                    <lvc:ColumnSeries Title=""
                                      Values="{Binding PointsProperty, IsAsync=True}"
                                      DataLabels="True">
                    </lvc:ColumnSeries>
                </lvc:CartesianChart.Series>
                <lvc:CartesianChart.AxisX>
                    <lvc:Axis Labels="{Binding ColumnsProperty, IsAsync=True}"/>
                </lvc:CartesianChart.AxisX>
            </lvc:CartesianChart>
            <ListBox Name="ListPorps"
                     Grid.Column="0"
                     Grid.Row="2" 
                     ItemsSource="{Binding Properties}"
                     SelectedIndex="{Binding SelectProperty}"
                     FontSize="15">
            </ListBox>
            <ListBox Name="ListVars"
                     Grid.Column="1"
                     Grid.Row="2"
                     SelectedIndex="{Binding SelectedVariant}"
                     FontSize="15">
                <ListBoxItem>
                    <TextBlock>Средние значения</TextBlock>
                </ListBoxItem>
                <ListBoxItem>
                    <TextBlock>Дисперсия</TextBlock>
                </ListBoxItem>
            </ListBox>
        </Grid>
        <DataGrid x:Name="AvarageGrid"
                  Grid.Row="0"
                  Grid.RowSpan="3"
                  Grid.Column="1"
                  AutoGenerateColumns="True"
                  AutoGeneratingColumn="AvarageGrid_AutoGeneratingColumn"
                  ItemsSource="{Binding AvarageData, IsAsync=True}"
                  FontSize="14">
            <DataGrid.LayoutTransform>
                <TransformGroup>
                    <RotateTransform Angle="90"/>
                    <MatrixTransform Matrix="-1,0,0,1,0,0"/>
                </TransformGroup>
            </DataGrid.LayoutTransform>
            <DataGrid.ColumnHeaderStyle>
                <Style TargetType="{x:Type DataGridColumnHeader}" 
                       BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
                    <Setter Property="LayoutTransform">
                        <Setter.Value>
                            <TransformGroup>
                                <RotateTransform Angle="-90"/>
                                <ScaleTransform ScaleX="1" ScaleY="-1" />
                            </TransformGroup>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="ContentTemplate">
                        <Setter.Value>
                            <DataTemplate>
                                <TextBlock TextWrapping="Wrap" Text="{Binding}"></TextBlock>
                            </DataTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Height" Value="40"/>
                    <Style.Triggers>
                        <Trigger Property="FontSize" Value="10">
                            <Setter Property="Height" Value="auto"/>
                            <Setter Property="Width" Value="90"/>
                        </Trigger>
                        <Trigger Property="FontSize" Value="14">
                            <Setter Property="Height" Value="50"/>
                            <Setter Property="Width" Value="auto"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.ColumnHeaderStyle>
            <DataGrid.CellStyle>
                <Style TargetType="DataGridCell">
                    <Setter Property="LayoutTransform">
                        <Setter.Value>
                            <TransformGroup>
                                <RotateTransform Angle="-90"/>
                                <ScaleTransform ScaleX="1" ScaleY="-1" />
                            </TransformGroup>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Height" Value="40"/>
                    <Style.Triggers>
                        <Trigger Property="FontSize" Value="10">
                            <Setter Property="Height" Value="auto"/>
                        </Trigger>
                        <Trigger Property="FontSize" Value="14">
                            <Setter Property="Height" Value="50"/>
                            <Setter Property="Width" Value="70"/>
                            <Setter Property="VerticalAlignment" Value="Center"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.CellStyle>
        </DataGrid>
    </Grid>
</UserControl>
